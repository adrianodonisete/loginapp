{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/register/register.component.css","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./main/main.module\": [\n\t\t\"./src/app/main/main.module.ts\",\n\t\t\"main-main-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: '/main/people'},\r\n  { path: 'main', loadChildren: './main/main.module#MainModule', canActivate: [ AuthGuard ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".username {\\r\\n    margin: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlcm5hbWUge1xyXG4gICAgbWFyZ2luOiAyMHB4O1xyXG59Il19 */\"","module.exports = \"<mat-toolbar>\\r\\n  My App \\r\\n  <span fxFlex></span>\\r\\n\\r\\n  <ng-container *ngIf=\\\"!(authenticated$ | async) \\\">\\r\\n    <button mat-button routerLink=\\\"/auth/login\\\">\\r\\n      <mat-icon>input</mat-icon>\\r\\n      &nbsp;Sign in\\r\\n    </button>\\r\\n    <button mat-button routerLink=\\\"/auth/register\\\">\\r\\n      <mat-icon>person_add</mat-icon>\\r\\n      &nbsp;Sign Up\\r\\n    </button> \\r\\n    \\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container *ngIf=\\\"(authenticated$ | async) && (user$ |async)\\\">\\r\\n\\r\\n    <button mat-icon-button routerLink=\\\"/main/people\\\">\\r\\n      <mat-icon>home</mat-icon>\\r\\n    </button>\\r\\n    <button mat-icon-button routerLink=\\\"/main/products\\\">\\r\\n      <mat-icon>shop</mat-icon>\\r\\n    </button>\\r\\n    <button mat-icon-button (click)=\\\"logout()\\\">\\r\\n      <mat-icon>exit_to_app</mat-icon>\\r\\n    </button>\\r\\n\\r\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n      <mat-icon>account_circle</mat-icon>\\r\\n    </button>\\r\\n    <mat-menu #menu=\\\"matMenu\\\">\\r\\n      <p class=\\\"username\\\">{{(user$|async)?.email}}</p>\\r\\n      <mat-divider></mat-divider>\\r\\n      <button mat-menu-item (click)=\\\"logout()\\\">\\r\\n        <mat-icon>exit_to_app</mat-icon>\\r\\n        Exit\\r\\n      </button>\\r\\n    </mat-menu>    \\r\\n\\r\\n  </ng-container>\\r\\n</mat-toolbar>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from './auth/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n  authenticated$ : Observable<boolean>;\r\n  user$: Observable<User>;\r\n\r\n  constructor(\r\n    private authService: AuthService, \r\n    private router: Router)  {\r\n    this.authenticated$ = this.authService.isAuthenticated();\r\n    this.user$ = this.authService.getUser();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.router.navigateByUrl('/auth/login');\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MainModule } from './main/main.module';\r\nimport { MaterialModule } from './material.module';\r\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    AuthModule.forRoot()\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, \r\n    state: RouterStateSnapshot): Observable<boolean> \r\n  {\r\n    return this.authService.isAuthenticated()\r\n      .pipe(\r\n        tap((b) => {\r\n          if (!b) {\r\n            this.router.navigateByUrl('/auth/login');\r\n          }\r\n        })\r\n      )\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'auth/login', component: LoginComponent},\r\n  { path: 'auth/register', component: RegisterComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        if (localStorage.getItem('token')) {\r\n            let token = localStorage.getItem('token');\r\n            const authReq = req.clone({\r\n                setHeaders: {\r\n                    Authorization: token\r\n                }\r\n            });\r\n            return next.handle(authReq)\r\n                .pipe(catchError((error)=>{\r\n                    console.log(error);\r\n                    if (error instanceof HttpErrorResponse) {\r\n                        if (error.status === 401) {\r\n                            this.authService.logout();\r\n                            this.router.navigateByUrl('/auth/login');\r\n                        }\r\n                    }\r\n                    return throwError(error);\r\n                }))\r\n        }\r\n        return next.handle(req);\r\n    }\r\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MaterialModule } from '../material.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthInterceptor } from './auth.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class AuthModule {\r\n\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: AuthModule,\r\n      providers: [\r\n        AuthInterceptor\r\n      ]\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject, of } from 'rxjs';\r\nimport { User } from './user';\r\nimport { tap, map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  readonly url = 'http://localhost:3000/auth';\r\n\r\n  private subjUser$: BehaviorSubject<User> = new BehaviorSubject(null);\r\n  private subjLoggedIn$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  register(user: User): Observable<User> {\r\n    return this.http.post<User>(`${this.url}/register`, user);\r\n  }\r\n\r\n  login(credentials: {email: string, password: string}): Observable<User> {\r\n    return this.http\r\n      .post<User>(`${this.url}/login`, credentials)\r\n      .pipe(\r\n        tap((u: User) => {\r\n          localStorage.setItem('token', u.token);\r\n          this.subjLoggedIn$.next(true);\r\n          this.subjUser$.next(u);\r\n        })\r\n      )\r\n  }\r\n\r\n  isAuthenticated(): Observable<boolean> {\r\n    const token = localStorage.getItem('token');\r\n    if (token && !this.subjLoggedIn$.value) {\r\n      return this.checkTokenValidation();\r\n    }\r\n    return this.subjLoggedIn$.asObservable();\r\n  }\r\n\r\n  checkTokenValidation(): Observable<boolean> {\r\n    return this.http\r\n      .get<User>(`${this.url}/user`)\r\n      .pipe(\r\n        tap((u: User) => {\r\n          if (u) {\r\n            localStorage.setItem('token', u.token);\r\n            this.subjLoggedIn$.next(true);\r\n            this.subjUser$.next(u);\r\n          }\r\n        }),\r\n        map((u: User) => (u)?true:false),\r\n        catchError((err) => {\r\n          this.logout();\r\n          return of(false);\r\n        })\r\n      );\r\n  }\r\n\r\n  getUser(): Observable<User> {\r\n    return this.subjUser$.asObservable();\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    this.subjLoggedIn$.next(false);\r\n    this.subjUser$.next(null);\r\n  }\r\n}\r\n","module.exports = \"  \\r\\n.login-card {\\r\\n    width: 400px;\\r\\n    margin-top: 100px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLFlBQVk7SUFDWixpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgIFxyXG4ubG9naW4tY2FyZCB7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxMDBweDtcclxufSJdfQ== */\"","module.exports = \"<div fxLayout=\\\"column\\\" >\\r\\n    <div fxLayoutAlign=\\\"center\\\" fxLayout=\\\"row\\\">\\r\\n      <form  [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\r\\n  \\r\\n        <mat-card class=\\\"login-card mat-elevation-z8\\\" >\\r\\n            <mat-card-title>Login</mat-card-title>\\r\\n            <mat-card-content fxLayout=\\\"column\\\" *ngIf=\\\"!loading\\\" >\\r\\n              <mat-form-field >\\r\\n                <input matInput formControlName=\\\"email\\\" type=\\\"email\\\"\\r\\n                    placeholder=\\\"E-mail\\\" autocomplete=\\\"email\\\" readonly=\\\"false\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput formControlName=\\\"password\\\" type=\\\"password\\\" disabled=\\\"true\\\" \\r\\n                  placeholder=\\\"Password\\\" autocomplete=\\\"password\\\">\\r\\n              </mat-form-field>\\r\\n            </mat-card-content>\\r\\n            <mat-card-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" >\\r\\n              <button mat-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">\\r\\n                <mat-icon>check</mat-icon>\\r\\n                Login\\r\\n              </button>\\r\\n            </mat-card-actions>\\r\\n            <mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n        </mat-card>\\r\\n      </form>\\r\\n  \\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup = this.fb.group({\r\n    'email': ['', [Validators.required, Validators.email]],\r\n    'password': ['', [Validators.required, Validators.minLength(6)]],\r\n  })\r\n\r\n  loading = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    const crendentials = this.loginForm.value;\r\n    this.loading = true;\r\n    this.authService.login(crendentials)\r\n      .subscribe(\r\n        (user) => {\r\n          console.log(user);\r\n          this.snackBar.open(\r\n            'Logged in successfuly. Welcome ' + user.firstname + '!', 'OK', \r\n            {duration: 2000});        \r\n          this.router.navigateByUrl('/');\r\n          this.loading = false;\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.snackBar.open(\r\n            'Login Error', 'OK', {duration: 2000});              \r\n            this.loading = false;\r\n        }\r\n      )\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.register-form {\\r\\n    max-width: 600px;\\r\\n    margin-top: 40px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLnJlZ2lzdGVyLWZvcm0ge1xyXG4gICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcbn0iXX0= */\"","module.exports = \"<div  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" >\\r\\n  <div align=\\\"center\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"  class=\\\"register-form\\\">\\r\\n\\r\\n    <form role=\\\"form\\\" [formGroup]=\\\"formRegister\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n      <mat-card class=\\\"mat-elevation-z8\\\" flex=\\\"80\\\">\\r\\n\\r\\n        <mat-card-title>Sign up</mat-card-title>\\r\\n\\r\\n        <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around stretch\\\">\\r\\n                      \\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\r\\n            <mat-form-field fxFlex=\\\"45\\\">\\r\\n              <input matInput type=\\\"text\\\" formControlName=\\\"firstname\\\" \\r\\n                autocomplete=\\\"firstname\\\" placeholder=\\\"First Name\\\">\\r\\n            </mat-form-field>               \\r\\n            <mat-form-field fxFlex=\\\"45\\\">\\r\\n              <input matInput type=\\\"text\\\" formControlName=\\\"lastname\\\" \\r\\n                autocomplete=\\\"lastname\\\" placeholder=\\\"Last Name\\\" >\\r\\n            </mat-form-field>               \\r\\n          </div>\\r\\n\\r\\n          <mat-form-field>\\r\\n            <input matInput type=\\\"text\\\" formControlName=\\\"address\\\" \\r\\n                  autocomplete=\\\"address\\\" placeholder=\\\"Address\\\" >\\r\\n          </mat-form-field>\\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\r\\n            <mat-form-field fxFlex=\\\"75\\\"> \\r\\n              <input matInput type=\\\"text\\\" formControlName=\\\"city\\\" \\r\\n                autocomplete=\\\"citt\\\" placeholder=\\\"City\\\"  >\\r\\n            </mat-form-field>\\r\\n          \\r\\n            <mat-form-field  fxFlex=\\\"15\\\">\\r\\n              <mat-select matNativeControl placeholder=\\\"State\\\" formControlName=\\\"state\\\">\\r\\n                <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state\\\">\\r\\n                  {{state}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>          \\r\\n            \\r\\n          </div>          \\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\r\\n            <mat-form-field fxFlex=\\\"45\\\"> \\r\\n              <input matInput type=\\\"text\\\" formControlName=\\\"phone\\\" \\r\\n                autocomplete=\\\"Phone\\\" placeholder=\\\"Phone\\\"  >\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"45\\\">               \\r\\n              <input matInput type=\\\"text\\\" formControlName=\\\"mobilephone\\\" \\r\\n                autocomplete=\\\"mobilephone\\\" placeholder=\\\"Mobile Phone\\\"  >\\r\\n            </mat-form-field>\\r\\n          </div>  \\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\r\\n            <mat-form-field fxFlex=\\\"100\\\">\\r\\n              <input matInput type=\\\"email\\\" formControlName=\\\"email\\\" \\r\\n                class=\\\"form-control\\\" value=\\\"\\\" autocomplete=\\\"email\\\" placeholder=\\\"E-mail\\\" >\\r\\n            </mat-form-field>  \\r\\n          </div>\\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\r\\n\\r\\n            <mat-form-field  fxFlex=\\\"45\\\">\\r\\n              <input matInput type=\\\"password\\\" formControlName=\\\"password1\\\" \\r\\n                type=\\\"password\\\" autocomplete=\\\"off\\\">\\r\\n              <mat-placeholder>\\r\\n                <mat-icon>lock</mat-icon> New password\\r\\n              </mat-placeholder>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"45\\\">\\r\\n              <input matInput type=\\\"password\\\" formControlName=\\\"password2\\\" \\r\\n                    class=\\\"form-control\\\"  autocomplete=\\\"off\\\">\\r\\n              <mat-placeholder>\\r\\n                <mat-icon>lock_outline</mat-icon> Password confirmation\\r\\n              </mat-placeholder>\\r\\n            </mat-form-field>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\" >\\r\\n              <button mat-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!formRegister.valid\\\">\\r\\n                <mat-icon>done</mat-icon>&nbsp;Register\\r\\n              </button>\\r\\n          </div>\\r\\n\\r\\n\\r\\n\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </form>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { User } from '../user';\r\nimport { AuthService } from '../auth.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  formRegister = this.fb.group({\r\n      'firstname': ['', [Validators.required]],\r\n      'lastname': ['', [Validators.required]],\r\n      'address': ['', [Validators.required]],\r\n      'city': ['', [Validators.required]],\r\n      'state': ['', [Validators.required]],\r\n      'phone': ['', [Validators.required]],\r\n      'mobilephone': ['', [Validators.required]],\r\n      'email': ['', [Validators.required, Validators.email]],\r\n      'password1': ['', [Validators.required, Validators.minLength(6)]],\r\n      'password2': ['', [Validators.required, Validators.minLength(6)]],\r\n    }, { validator: this.matchingPasswords});\r\n\r\n  states = [\"MG\", \"RS\", \"SC\", \"GO\", \"PR\", \"SP\"];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  matchingPasswords(group: FormGroup) {\r\n    if (group) {\r\n      const password1 = group.controls['password1'].value;\r\n      const password2 = group.controls['password2'].value;\r\n      if (password1 == password2) {\r\n        return null;\r\n      }\r\n    }\r\n    return {matching: false};\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.formRegister.value);\r\n    let u: User = { \r\n      ...this.formRegister.value, \r\n      password: this.formRegister.value.password1};\r\n    this.authService.register(u)\r\n      .subscribe(\r\n        (u) => {\r\n          this.snackBar.open(\r\n            'Successfuly registered. Use your credentials to sing in',\r\n            'OK', {duration: 2000});\r\n          this.router.navigateByUrl('/auth/login');\r\n        },\r\n        (err) => {\r\n          console.error(err);\r\n          this.snackBar.open(err.error.message,'OK', {duration: 2000});\r\n        }\r\n      )\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport {\r\n  \r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatFormFieldModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n\r\n\r\n@NgModule({\r\n  imports: [ ],\r\n  exports: [\r\n    FlexLayoutModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n\r\n  ],\r\n  declarations: []\r\n})\r\nexport class MaterialModule { }","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}